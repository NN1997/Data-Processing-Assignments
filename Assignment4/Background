RangeQuery() -
o Implement a Python function RangeQuery that takes as input: (1) Ratings table stored in PostgreSQL, (2) RatingMinValue (3) RatingMaxValue (4) openconnection
o Please note that the RangeQuery would not use ratings table but it would use the range and round robin partitions of the ratings table.
o RangeQuery() then returns all tuples for which the rating value is larger than or equal to RatingMinValue and less than or equal to RatingMaxValue.
o The returned tuples should be stored in a text file, named RangeQueryOut.txt (in the same directory where Interface.py is present) such that each line represents a tuple that has the following format such that PartitionName represents the full name of the partition i.e. RangeRatingsPart1 or RoundRobinRatingsPart4 etc. in which this tuple resides.

Example:
PartitionName, UserID, MovieID, Rating
RangeRatingsPart0,1,377,0.5
RoundRobinRatingsPart1,1,377,0.5 

o Note: Please use ',' (COMMA, no space character) as delimiter between PartitionName, UserID, MovieID and Rating.

 

PointQuery() -
o Implement a Python function PointQuery that takes as input: (1) Ratings table stored in PostgreSQL, (2) RatingValue. (3) openconnection
o Please note that the PointQuery would not use ratings table but it would use the range and round robin partitions of the ratings table.
o PointQuery() then returns all tuples for which the rating value is equal to RatingValue.
o The returned tuples should be stored in a text file, named PointQueryOut.txt (in the same directory where Interface.py is present) such that each line represents a tuple that has the following format such that PartitionName represents the full name of the partition i.e. RangeRatingsPart1 or RoundRobinRatingsPart4 etc. in which this tuple resides.

Example
PartitionName, UserID, MovieID, Rating
RangeRatingsPart3,23,459,3.5
RoundRobinRatingsPart4,31,221,0

o Note: Please use ',' (COMMA) as delimiter between PartitionName, UserID, MovieID and Rating.

 
Please use the function signature exactly same as mentioned in Interface.py .

Naming Convention to be followed strictly:
Database name - dds_assignment

Name of Rating table - ratings

Postgres User name - postgres

Postgres password - 1234

Name of the Range Query Output file - RangeQueryOut.txt

Name of the Point Query Output file - PointQueryOut.txt
